---
import projects from "../../../db/projects.json";
import Section from "../../components/Section.astro";
import { Image } from "astro:assets";
import { type Project } from "../../types";
import projectTypes from "../../../db/projectTypes.json";
import { Icon } from "astro-icon";
import RolPill from "../../components/RolPill.tsx";
import BorderedAnchor from "../../components/BorderedAnchor.astro";
import BaseLayout from "../../layouts/BaseLayout.astro";
import NavLayout from "../../layouts/NavLayout.astro";
import LogoName from "../../components/LogoName.astro";
import { capitalizeText } from "../../utils/capitalizeText";
import { textToKebabCase } from "../../utils/textToKebabCase";
import ReadmeOfRepo from "../../components/ReadmeOfRepo.tsx";
import { getAllSkillsInOneArray } from "../../utils/getAllSkillsInOneArray";
import Skill from "../../components/Skill.astro";

export function getStaticPaths() {
  const toReturn = projects.map(({ name }) => {
    return {
      params: {
        project: textToKebabCase(name),
      },
    };
  });

  return toReturn;
}

const { project: projectName } = Astro.params;

const {
  name,
  fileName,
  alt,
  projectType,
  description,
  preview,
  repository,
  technologies,
} = projects.find((x) => projectName === textToKebabCase(x.name)) as Project;

const allSkills = getAllSkillsInOneArray();
const projectSkills = allSkills.filter(({ name }) =>
  technologies.includes(name)
);
---

<BaseLayout
  HeadData={{
    title: `Francesco Alterio | ${name} | Portafolio`,
    description: description.slice(0, 10) + "...",
    ogTitle: `Francesco Alterio | ${name} | Portafolio`,
    ogDescription: description.slice(0, 10) + "...",
    ogURL: "https://francescoalterio.com/",
    ogImage: `/assets/projects/${fileName}`,
  }}
  className=" bg-customGray-300"
>
  <NavLayout HeaderClassName="bg-customGray-200">
    <LogoName />
  </NavLayout>
  <!-- <ReadmeOfRepo client:load repositoryURL={repository.url} /> -->
  <main class="">
    <Section
      background="light"
      className="flex flex-col lg:flex-row items-center gap-10 py-10"
    >
      <div class="flex flex-col items-center lg:items-start flex-1 gap-4">
        <RolPill bgColor={projectTypes[projectType.toLowerCase()].color}>
          {capitalizeText(projectTypes[projectType.toLowerCase()].es)}
        </RolPill>
        <h1 class="text-center w-full lg:text-start text-5xl font-bold">
          {name}
        </h1>
        <p class="text-center lg:text-start text-gray-400 text-sm">
          {description}
        </p>
        <div
          class="w-full justify-center lg:justify-start flex items-center gap-2"
        >
          {
            preview && (
              <BorderedAnchor href={preview.url}>Ver demo</BorderedAnchor>
            )
          }
          <a
            class="rounded-md text-white bg-zinc-800 px-4 py-2 flex items-center border border-zinc-800"
            href={repository.url}
          >
            <Icon name="mdi:github" class="w-6 mr-2" />
            Ver repositorio
          </a>
        </div>
      </div>
      <picture class="flex-1 rounded-lg">
        <Image
          src={`/assets/projects/${fileName}`}
          width={1920}
          height={1080}
          sizes="1920px"
          alt={alt}
          class="lg:sticky lg:top-6 rounded-lg object-cover w-full h-full"
        />
      </picture>
    </Section>
    <Section
      background="dark"
      className="py-10 flex flex-col gap-10 items-center"
      id="skills"
    >
      <h2 class="text-2xl sm:text-3xl md:text-4xl my-5 font-bold">
        Tecnologias Utilizadas
      </h2>
      <div class="flex flex-wrap gap-10 justify-center">
        {
          projectSkills.map(
            ({ name, fileName, documentationURL, type, spanishType }) => (
              <Skill
                name={name}
                fileName={fileName}
                documentationURL={documentationURL}
                type={type}
                spanishType={spanishType}
              />
            )
          )
        }
      </div>
    </Section>
    <Section
      background="light"
      className="flex flex-col lg:flex-row py-16 gap-10"
    >
      <div class="flex-1 flex flex-col gap-4">
        <h2
          class="text-center lg:text-start text-4xl font-bold text-2xl sm:text-3xl md:text-4xl my-5 font-bold"
        >
          README del Proyecto
        </h2>
        <p class="text-center lg:text-start text-gray-400 text-sm">
          Explore el archivo README del proyecto, que proporciona información
          detallada sobre las funciones, el uso y las instrucciones de
          configuración. Aprenda cómo integrar rápidamente estos componentes de
          alta calidad en su aplicación y descubra las amplias opciones de
          personalización disponibles para garantizar una adaptación perfecta a
          su marca y sistema de diseño.
        </p>
      </div>
      <div class="flex-1 bg-customGray-300 p-6 rounded-lg">
        <ReadmeOfRepo client:load repositoryURL={repository.url} />
      </div>
    </Section>
  </main>
</BaseLayout>
